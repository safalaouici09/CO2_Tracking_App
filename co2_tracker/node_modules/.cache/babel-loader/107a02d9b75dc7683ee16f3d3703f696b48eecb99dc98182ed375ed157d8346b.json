{"ast":null,"code":"var _jsxFileName = \"/home/safa/Bureau/saas app/co2-tracker/src/components/SuggestionBall.js\",\n  _s = $RefreshSig$();\n// src/components/SuggestionBall.js\nimport React, { useEffect, useState } from 'react';\nimport { getSuggestions } from '../utils/api'; // Ensure this API function is defined and imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuggestionBall = () => {\n  _s();\n  const [suggestions, setSuggestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [position, setPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const fetchSuggestions = async () => {\n    const response = await getSuggestions();\n    setSuggestions(response.data);\n  };\n  const updatePosition = () => {\n    setPosition({\n      top: Math.random() * (window.innerHeight - 100),\n      // Adjust for larger ball size\n      left: Math.random() * (window.innerWidth - 100) // Adjust for larger ball size\n    });\n  };\n  const changeSuggestion = () => {\n    const randomIndex = Math.floor(Math.random() * suggestions.length);\n    setCurrentIndex(randomIndex);\n    updatePosition(); // Update position on suggestion change\n  };\n  useEffect(() => {\n    fetchSuggestions();\n  }, []); // Run once on component mount\n\n  useEffect(() => {\n    if (suggestions.length > 0) {\n      updatePosition(); // Initial position on suggestions fetched\n      const intervalId = setInterval(() => {\n        changeSuggestion();\n      }, 10000); // Change suggestion every 10 seconds\n\n      return () => clearInterval(intervalId); // Cleanup on unmount\n    }\n  }, [suggestions]); // Runs when suggestions change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute bg-greenCustom text-white rounded-lg w-60 h-20 flex items-center justify-center transition-transform shadow-lg\",\n    style: {\n      top: position.top,\n      left: position.left,\n      transition: 'top 5s ease, left 5s ease',\n      // Smooth movement\n      fontSize: '1.25rem',\n      // Adjust font size for better visibility\n      padding: '10px 20px',\n      // Add padding for aesthetics\n      textAlign: 'center',\n      // Center the text\n      boxShadow: '0 4px 15px rgba(0, 0, 0, 0.2)',\n      // Shadow effect\n      borderRadius: '20px' // Rounded corners\n    },\n    children: suggestions.length > 0 ? suggestions[currentIndex] : 'Loading...'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(SuggestionBall, \"HpIiAgPfIXwCGqLOlDR7keKxdoA=\");\n_c = SuggestionBall;\nexport default SuggestionBall;\nvar _c;\n$RefreshReg$(_c, \"SuggestionBall\");","map":{"version":3,"names":["React","useEffect","useState","getSuggestions","jsxDEV","_jsxDEV","SuggestionBall","_s","suggestions","setSuggestions","currentIndex","setCurrentIndex","position","setPosition","top","left","fetchSuggestions","response","data","updatePosition","Math","random","window","innerHeight","innerWidth","changeSuggestion","randomIndex","floor","length","intervalId","setInterval","clearInterval","className","style","transition","fontSize","padding","textAlign","boxShadow","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/safa/Bureau/saas app/co2-tracker/src/components/SuggestionBall.js"],"sourcesContent":["// src/components/SuggestionBall.js\nimport React, { useEffect, useState } from 'react';\nimport { getSuggestions } from '../utils/api'; // Ensure this API function is defined and imported\n\nconst SuggestionBall = () => {\n    const [suggestions, setSuggestions] = useState([]);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [position, setPosition] = useState({ top: 0, left: 0 });\n\n    const fetchSuggestions = async () => {\n        const response = await getSuggestions();\n        setSuggestions(response.data);\n    };\n\n    const updatePosition = () => {\n        setPosition({\n            top: Math.random() * (window.innerHeight - 100), // Adjust for larger ball size\n            left: Math.random() * (window.innerWidth - 100), // Adjust for larger ball size\n        });\n    };\n\n    const changeSuggestion = () => {\n        const randomIndex = Math.floor(Math.random() * suggestions.length);\n        setCurrentIndex(randomIndex);\n        updatePosition(); // Update position on suggestion change\n    };\n\n    useEffect(() => {\n        fetchSuggestions();\n    }, []); // Run once on component mount\n\n    useEffect(() => {\n        if (suggestions.length > 0) {\n            updatePosition(); // Initial position on suggestions fetched\n            const intervalId = setInterval(() => {\n                changeSuggestion();\n            }, 10000); // Change suggestion every 10 seconds\n\n            return () => clearInterval(intervalId); // Cleanup on unmount\n        }\n    }, [suggestions]); // Runs when suggestions change\n\n    return (\n        <div\n            className=\"absolute bg-greenCustom text-white rounded-lg w-60 h-20 flex items-center justify-center transition-transform shadow-lg\"\n            style={{\n                top: position.top,\n                left: position.left,\n                transition: 'top 5s ease, left 5s ease', // Smooth movement\n                fontSize: '1.25rem', // Adjust font size for better visibility\n                padding: '10px 20px', // Add padding for aesthetics\n                textAlign: 'center', // Center the text\n                boxShadow: '0 4px 15px rgba(0, 0, 0, 0.2)', // Shadow effect\n                borderRadius: '20px' // Rounded corners\n            }}\n        >\n            {suggestions.length > 0 ? suggestions[currentIndex] : 'Loading...'}\n        </div>\n    );\n};\n\nexport default SuggestionBall;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IAAEY,GAAG,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAE,CAAC,CAAC;EAE7D,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,QAAQ,GAAG,MAAMd,cAAc,CAAC,CAAC;IACvCM,cAAc,CAACQ,QAAQ,CAACC,IAAI,CAAC;EACjC,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzBN,WAAW,CAAC;MACRC,GAAG,EAAEM,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIC,MAAM,CAACC,WAAW,GAAG,GAAG,CAAC;MAAE;MACjDR,IAAI,EAAEK,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIC,MAAM,CAACE,UAAU,GAAG,GAAG,CAAC,CAAE;IACrD,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,MAAMC,WAAW,GAAGN,IAAI,CAACO,KAAK,CAACP,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGb,WAAW,CAACoB,MAAM,CAAC;IAClEjB,eAAe,CAACe,WAAW,CAAC;IAC5BP,cAAc,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACZe,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERf,SAAS,CAAC,MAAM;IACZ,IAAIO,WAAW,CAACoB,MAAM,GAAG,CAAC,EAAE;MACxBT,cAAc,CAAC,CAAC,CAAC,CAAC;MAClB,MAAMU,UAAU,GAAGC,WAAW,CAAC,MAAM;QACjCL,gBAAgB,CAAC,CAAC;MACtB,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;;MAEX,OAAO,MAAMM,aAAa,CAACF,UAAU,CAAC,CAAC,CAAC;IAC5C;EACJ,CAAC,EAAE,CAACrB,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnB,oBACIH,OAAA;IACI2B,SAAS,EAAC,yHAAyH;IACnIC,KAAK,EAAE;MACHnB,GAAG,EAAEF,QAAQ,CAACE,GAAG;MACjBC,IAAI,EAAEH,QAAQ,CAACG,IAAI;MACnBmB,UAAU,EAAE,2BAA2B;MAAE;MACzCC,QAAQ,EAAE,SAAS;MAAE;MACrBC,OAAO,EAAE,WAAW;MAAE;MACtBC,SAAS,EAAE,QAAQ;MAAE;MACrBC,SAAS,EAAE,+BAA+B;MAAE;MAC5CC,YAAY,EAAE,MAAM,CAAC;IACzB,CAAE;IAAAC,QAAA,EAEDhC,WAAW,CAACoB,MAAM,GAAG,CAAC,GAAGpB,WAAW,CAACE,YAAY,CAAC,GAAG;EAAY;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEd,CAAC;AAACrC,EAAA,CAvDID,cAAc;AAAAuC,EAAA,GAAdvC,cAAc;AAyDpB,eAAeA,cAAc;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}