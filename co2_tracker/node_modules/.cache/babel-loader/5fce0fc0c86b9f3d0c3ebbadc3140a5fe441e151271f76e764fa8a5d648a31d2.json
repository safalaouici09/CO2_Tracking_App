{"ast":null,"code":"var _jsxFileName = \"/home/safa/Bureau/saas app/co2-tracker/src/components/SuggestionBall.js\",\n  _s = $RefreshSig$();\n// src/components/SuggestionBall.js\nimport React, { useEffect, useState } from 'react';\nimport { getSuggestions } from '../utils/api'; // Ensure this API function is defined and imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuggestionBall = () => {\n  _s();\n  const [suggestions, setSuggestions] = useState([]);\n  const [currentSuggestion, setCurrentSuggestion] = useState('');\n  const [position, setPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const fetchSuggestions = async () => {\n    const response = await getSuggestions();\n    setSuggestions(response.data);\n  };\n  const updatePosition = () => {\n    setPosition({\n      top: Math.random() * (window.innerHeight - 50),\n      // Adjust for ball size\n      left: Math.random() * (window.innerWidth - 50) // Adjust for ball size\n    });\n  };\n  const changeSuggestion = () => {\n    if (suggestions.length > 0) {\n      const randomIndex = Math.floor(Math.random() * suggestions.length);\n      setCurrentSuggestion(suggestions[randomIndex]);\n    }\n  };\n  useEffect(() => {\n    fetchSuggestions();\n    changeSuggestion();\n    const intervalId = setInterval(() => {\n      changeSuggestion();\n      updatePosition();\n    }, 3000); // Change suggestion and position every 3 seconds\n\n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, [suggestions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute bg-blue-500 text-white rounded-full w-12 h-12 flex items-center justify-center transition-transform\",\n    style: {\n      top: position.top,\n      left: position.left,\n      transition: 'top  1 s, left 1 s'\n    },\n    children: currentSuggestion\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(SuggestionBall, \"ng/G5kWpgH4ZxepmII1ROOE9Q54=\");\n_c = SuggestionBall;\nexport default SuggestionBall;\nvar _c;\n$RefreshReg$(_c, \"SuggestionBall\");","map":{"version":3,"names":["React","useEffect","useState","getSuggestions","jsxDEV","_jsxDEV","SuggestionBall","_s","suggestions","setSuggestions","currentSuggestion","setCurrentSuggestion","position","setPosition","top","left","fetchSuggestions","response","data","updatePosition","Math","random","window","innerHeight","innerWidth","changeSuggestion","length","randomIndex","floor","intervalId","setInterval","clearInterval","className","style","transition","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/safa/Bureau/saas app/co2-tracker/src/components/SuggestionBall.js"],"sourcesContent":["// src/components/SuggestionBall.js\nimport React, { useEffect, useState } from 'react';\nimport { getSuggestions } from '../utils/api'; // Ensure this API function is defined and imported\n\nconst SuggestionBall = () => {\n    const [suggestions, setSuggestions] = useState([]);\n    const [currentSuggestion, setCurrentSuggestion] = useState('');\n    const [position, setPosition] = useState({ top: 0, left: 0 });\n\n    const fetchSuggestions = async () => {\n        const response = await getSuggestions();\n        setSuggestions(response.data);\n    };\n\n    const updatePosition = () => {\n        setPosition({\n            top: Math.random() * (window.innerHeight - 50), // Adjust for ball size\n            left: Math.random() * (window.innerWidth - 50), // Adjust for ball size\n        });\n    };\n\n    const changeSuggestion = () => {\n        if (suggestions.length > 0) {\n            const randomIndex = Math.floor(Math.random() * suggestions.length);\n            setCurrentSuggestion(suggestions[randomIndex]);\n        }\n    };\n\n    useEffect(() => {\n        fetchSuggestions();\n        changeSuggestion();\n        const intervalId = setInterval(() => {\n            changeSuggestion();\n            updatePosition();\n        }, 3000); // Change suggestion and position every 3 seconds\n\n        return () => clearInterval(intervalId); // Cleanup on unmount\n    }, [suggestions]);\n\n    return (\n        <div\n            className=\"absolute bg-blue-500 text-white rounded-full w-12 h-12 flex items-center justify-center transition-transform\"\n            style={{\n                top: position.top,\n                left: position.left,\n                transition: 'top  1 s, left 1 s',\n            }}\n        >\n            {currentSuggestion}\n        </div>\n    );\n};\n\nexport default SuggestionBall;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IAAEY,GAAG,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAE,CAAC,CAAC;EAE7D,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,QAAQ,GAAG,MAAMd,cAAc,CAAC,CAAC;IACvCM,cAAc,CAACQ,QAAQ,CAACC,IAAI,CAAC;EACjC,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzBN,WAAW,CAAC;MACRC,GAAG,EAAEM,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIC,MAAM,CAACC,WAAW,GAAG,EAAE,CAAC;MAAE;MAChDR,IAAI,EAAEK,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIC,MAAM,CAACE,UAAU,GAAG,EAAE,CAAC,CAAE;IACpD,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIjB,WAAW,CAACkB,MAAM,GAAG,CAAC,EAAE;MACxB,MAAMC,WAAW,GAAGP,IAAI,CAACQ,KAAK,CAACR,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGb,WAAW,CAACkB,MAAM,CAAC;MAClEf,oBAAoB,CAACH,WAAW,CAACmB,WAAW,CAAC,CAAC;IAClD;EACJ,CAAC;EAED1B,SAAS,CAAC,MAAM;IACZe,gBAAgB,CAAC,CAAC;IAClBS,gBAAgB,CAAC,CAAC;IAClB,MAAMI,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjCL,gBAAgB,CAAC,CAAC;MAClBN,cAAc,CAAC,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMY,aAAa,CAACF,UAAU,CAAC,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACrB,WAAW,CAAC,CAAC;EAEjB,oBACIH,OAAA;IACI2B,SAAS,EAAC,8GAA8G;IACxHC,KAAK,EAAE;MACHnB,GAAG,EAAEF,QAAQ,CAACE,GAAG;MACjBC,IAAI,EAAEH,QAAQ,CAACG,IAAI;MACnBmB,UAAU,EAAE;IAChB,CAAE;IAAAC,QAAA,EAEDzB;EAAiB;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEd,CAAC;AAAChC,EAAA,CA/CID,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AAiDpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}